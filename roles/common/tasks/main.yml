---

- name: Check if ssh host keys have been reset
  stat: 
    path: /etc/ssh/ssh_host_keys_reset
  register: ssh_host_keys_reset

- name: Set host keys on first run
  block:
    - name: Find host keys
      find:
        paths: /etc/ssh/ssh
        patterns: "ssh_host*"
      register: ssh_host_keys

    - name: Clear host keys
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ ssh_host_keys['files'] }}"

    - name: Generate host keys
      shell:
        cmd: ssh-keygen -A

    - name: Flag that host keys have been reset
      file:
        path: /etc/ssh/ssh_host_keys_reset
        state: touch
        mode: 0644

  when: ssh_host_keys_reset.stat.exists == false
  become: true

- name: Check if password needs to be changed
  become: true
  script:
    cmd: "test-password.sh {{ pi_user_username }} {{ pi_user_password }}"
  register: password_test
  changed_when: '"no match" in password_test.stdout'
  no_log: yes

- name: Generate password hash
  shell:
    cmd: "openssl passwd -1 {{ pi_user_password }}"
  register: password_hash
  no_log: yes
  when: password_test is changed

- name: Set default password
  become: yes
  user:
    name: "{{ pi_user_username }}"
    password: "{{ password_hash.stdout }}"
  no_log: yes
  when: password_test is changed

- name: Disable SSH password login
  become: yes
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: ^#?PasswordAuthentication
    line: PasswordAuthentication no

- name: Copy bash aliases
  copy:
    src: .bash_aliases
    dest: ~/.bash_aliases
    owner: "{{ pi_user_username }}"
    group: "{{ pi_user_username }}"
    mode: '0644'

- name: Upgrade packages
  become: yes
  apt:
    update-cache: yes
    upgrade: full
